import os
import json
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, CommandHandler, filters, ContextTypes

# –§–∞–π–ª —Å–æ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞–º–∏
BANNED_FILE = "banned_words.json"

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤
def load_banned_words():
    if not os.path.exists(BANNED_FILE):
        return []
    with open(BANNED_FILE, "r", encoding="utf-8") as f:
        return json.load(f)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞
def save_banned_words(words):
    with open(BANNED_FILE, "w", encoding="utf-8") as f:
        json.dump(words, f, ensure_ascii=False, indent=2)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
BANNED_WORDS = load_banned_words()

async def delete_bad_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message and any(word in update.message.text.lower() for word in BANNED_WORDS):
        try:
            await update.message.delete()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")

async def add_spam(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /spam <—Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑–∞>")
        return
    phrase = " ".join(context.args).lower()
    if phrase not in BANNED_WORDS:
        BANNED_WORDS.append(phrase)
        save_banned_words(BANNED_WORDS)
        await update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ø–∞–º: {phrase}")
    else:
        await update.message.reply_text("üîÅ –£–∂–µ –≤ —Å–ø–∏—Å–∫–µ —Å–ø–∞–º–∞.")

async def remove_spam(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /unspam <—Å–ª–æ–≤–æ>")
        return
    phrase = " ".join(context.args).lower()
    if phrase in BANNED_WORDS:
        BANNED_WORDS.remove(phrase)
        save_banned_words(BANNED_WORDS)
        await update.message.reply_text(f"‚ùå –£–¥–∞–ª–µ–Ω–æ –∏–∑ —Å–ø–∞–º–∞: {phrase}")
    else:
        await update.message.reply_text("‚ùó –¢–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ.")

async def list_spam(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not BANNED_WORDS:
        await update.message.reply_text("üì≠ –°–ø–∏—Å–æ–∫ —Å–ø–∞–º–∞ –ø—É—Å—Ç.")
    else:
        text = "\n".join(f"- {w}" for w in BANNED_WORDS)
        await update.message.reply_text(f"üìÉ –°–ø–∏—Å–æ–∫ —Å–ø–∞–º–∞:\n{text}")

TOKEN = os.getenv("BOT_TOKEN")

app = ApplicationBuilder().token(TOKEN).build()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), delete_bad_messages))
app.add_handler(CommandHandler("spam", add_spam))
app.add_handler(CommandHandler("unspam", remove_spam))
app.add_handler(CommandHandler("spamlist", list_spam))

app.run_polling()
